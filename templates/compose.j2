# {{ ansible_managed }}

version: "3"

networks:
  {{ minio_docker_network_name }}:
    driver: bridge
    external: {{ minio_docker_network_external }}

services:
  {{ minio_docker_service_name }}:
    container_name: {{ minio_docker_service_name }}
    image: quay.io/minio/minio:{{ minio_docker_version }}
{% if (minio_docker_user | length) and (minio_docker_group | length) %}
    user: {{ minio_docker_user }}:{{ minio_docker_group }}
{% endif %}
    environment:
        TZ: {{ minio_docker_timezone }}
        MINIO_ROOT_USER: {{ minio_docker_root_user }}
        MINIO_ROOT_PASSWORD: {{ minio_docker_root_password }}
    ports:
        - {{ minio_docker_server_port }}:{{ minio_docker_server_port }}
        - {{ minio_docker_console_port }}:{{ minio_docker_console_port }}
    networks:
        - {{ minio_docker_network_name }}
    volumes:
        - {{ minio_docker_project_location }}/data:/data:rw
    entrypoint: ["/bin/sh","-c"]
    command:
        - |
            mkdir -p /data/{{ minio_docker_default_bucket }}
            minio server --address ":{{ minio_docker_server_port }}" --console-address ":{{ minio_docker_console_port }}" /data
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:{{ minio_docker_server_port }}/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3
    restart: always
    deploy:
        restart_policy:
            condition: on-failure
            delay: 5s
            max_attempts: 3
            window: 120s
